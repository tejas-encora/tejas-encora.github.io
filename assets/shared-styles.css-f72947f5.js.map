{"version":3,"file":"shared-styles.css-f72947f5.js","sources":["../../node_modules/@material/web/internal/controller/is-rtl.js","../../node_modules/@material/web/iconbutton/internal/icon-button.js","../../node_modules/@material/web/iconbutton/internal/shared-styles.css.js"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns `true` if the given element is in a right-to-left direction.\n *\n * @param el Element to determine direction from\n * @param shouldCheck Optional. If `false`, return `false` without checking\n *     direction. Determining the direction of `el` is somewhat expensive, so\n *     this parameter can be used as a conditional guard. Defaults to `true`.\n */\nexport function isRtl(el, shouldCheck = true) {\n    return shouldCheck &&\n        getComputedStyle(el).getPropertyValue('direction').trim() === 'rtl';\n}\n//# sourceMappingURL=is-rtl.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, LitElement, nothing } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { html as staticHtml, literal } from 'lit/static-html.js';\nimport { requestUpdateOnAriaChange } from '../../internal/aria/delegate.js';\nimport { internals } from '../../internal/controller/element-internals.js';\nimport { setupFormSubmitter } from '../../internal/controller/form-submitter.js';\nimport { isRtl } from '../../internal/controller/is-rtl.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class IconButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the icon button and makes it non-interactive.\n         */\n        this.disabled = false;\n        /**\n         * Flips the icon if it is in an RTL context at startup.\n         */\n        this.flipIconInRtl = false;\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n         */\n        this.href = '';\n        /**\n         * Sets the underlying `HTMLAnchorElement`'s `target` attribute.\n         */\n        this.target = '';\n        /**\n         * The `aria-label` of the button when the button is toggleable and selected.\n         */\n        this.ariaLabelSelected = '';\n        /**\n         * When true, the button will toggle between selected and unselected\n         * states\n         */\n        this.toggle = false;\n        /**\n         * Sets the selected state. When false, displays the default icon. When true,\n         * displays the selected icon, or the default icon If no `slot=\"selected\"`\n         * icon is provided.\n         */\n        this.selected = false;\n        this.type = 'submit';\n        this.value = '';\n        this.flipIcon = isRtl(this, this.flipIconInRtl);\n        /** @private */\n        this[_a] = this /* needed for closure */.attachInternals();\n    }\n    get name() {\n        return this.getAttribute('name') ?? '';\n    }\n    set name(name) {\n        this.setAttribute('name', name);\n    }\n    /**\n     * The associated form element with which this element's value will submit.\n     */\n    get form() {\n        return this[internals].form;\n    }\n    /**\n     * The labels this element is associated with.\n     */\n    get labels() {\n        return this[internals].labels;\n    }\n    /**\n     * Link buttons cannot be disabled.\n     */\n    willUpdate() {\n        if (this.href) {\n            this.disabled = false;\n        }\n    }\n    render() {\n        const tag = this.href ? literal `div` : literal `button`;\n        // Needed for closure conformance\n        const { ariaLabel, ariaHasPopup, ariaExpanded } = this;\n        const hasToggledAriaLabel = ariaLabel && this.ariaLabelSelected;\n        const ariaPressedValue = !this.toggle ? nothing : this.selected;\n        let ariaLabelValue = nothing;\n        if (!this.href) {\n            ariaLabelValue = (hasToggledAriaLabel && this.selected) ?\n                this.ariaLabelSelected :\n                ariaLabel;\n        }\n        return staticHtml `<${tag}\n        class=\"icon-button ${classMap(this.getRenderClasses())}\"\n        id=\"button\"\n        aria-label=\"${ariaLabelValue || nothing}\"\n        aria-haspopup=\"${!this.href && ariaHasPopup || nothing}\"\n        aria-expanded=\"${!this.href && ariaExpanded || nothing}\"\n        aria-pressed=\"${ariaPressedValue}\"\n        ?disabled=\"${!this.href && this.disabled}\"\n        @click=\"${this.handleClick}\">\n        ${this.renderFocusRing()}\n        ${this.renderRipple()}\n        ${!this.selected ? this.renderIcon() : nothing}\n        ${this.selected ? this.renderSelectedIcon() : nothing}\n        ${this.renderTouchTarget()}\n        ${this.href && this.renderLink()}\n  </${tag}>`;\n    }\n    renderLink() {\n        // Needed for closure conformance\n        const { ariaLabel } = this;\n        return html `\n      <a class=\"link\"\n        id=\"link\"\n        href=\"${this.href}\"\n        target=\"${this.target || nothing}\"\n        aria-label=\"${ariaLabel || nothing}\"\n      ></a>\n    `;\n    }\n    getRenderClasses() {\n        return {\n            'flip-icon': this.flipIcon,\n            'selected': this.toggle && this.selected,\n        };\n    }\n    renderIcon() {\n        return html `<span class=\"icon\"><slot></slot></span>`;\n    }\n    renderSelectedIcon() {\n        // Use default slot as fallback to not require specifying multiple icons\n        return html `<span class=\"icon icon--selected\"><slot name=\"selected\"><slot></slot></slot></span>`;\n    }\n    renderTouchTarget() {\n        return html `<span class=\"touch\"></span>`;\n    }\n    renderFocusRing() {\n        return html `<md-focus-ring part=\"focus-ring\" for=${this.href ? 'link' : 'button'}></md-focus-ring>`;\n    }\n    renderRipple() {\n        return html `<md-ripple\n      for=${this.href ? 'link' : nothing}\n      ?disabled=\"${!this.href && this.disabled}\"\n    ></md-ripple>`;\n    }\n    connectedCallback() {\n        this.flipIcon = isRtl(this, this.flipIconInRtl);\n        super.connectedCallback();\n    }\n    async handleClick(event) {\n        // Allow the event to propagate\n        await 0;\n        if (!this.toggle || this.disabled || event.defaultPrevented) {\n            return;\n        }\n        this.selected = !this.selected;\n        this.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n        // Bubbles but does not compose to mimic native browser <input> & <select>\n        // Additionally, native change event is not an InputEvent.\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n}\n_a = internals;\n(() => {\n    requestUpdateOnAriaChange(IconButton);\n    setupFormSubmitter(IconButton);\n})();\n/** @nocollapse */\nIconButton.formAssociated = true;\n/** @nocollapse */\nIconButton.shadowRootOptions = { mode: 'open', delegatesFocus: true };\n__decorate([\n    property({ type: Boolean, reflect: true })\n], IconButton.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'flip-icon-in-rtl' })\n], IconButton.prototype, \"flipIconInRtl\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"href\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"target\", void 0);\n__decorate([\n    property({ attribute: 'aria-label-selected' })\n], IconButton.prototype, \"ariaLabelSelected\", void 0);\n__decorate([\n    property({ type: Boolean })\n], IconButton.prototype, \"toggle\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], IconButton.prototype, \"selected\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"type\", void 0);\n__decorate([\n    property()\n], IconButton.prototype, \"value\", void 0);\n__decorate([\n    state()\n], IconButton.prototype, \"flipIcon\", void 0);\n//# sourceMappingURL=icon-button.js.map","/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);height:var(--_container-height);width:var(--_container-width);justify-content:center}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) max(0px,(48px - var(--_container-width))/2)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){pointer-events:none}.icon-button{place-items:center;background:none;border:none;box-sizing:border-box;cursor:pointer;display:flex;place-content:center;outline:none;padding:0;position:relative;text-decoration:none;user-select:none;z-index:0;flex:1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.icon ::slotted(*){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size);font-weight:inherit}md-ripple{z-index:-1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.flip-icon .icon{transform:scaleX(-1)}.icon{display:inline-flex}.link{height:100%;outline:none;position:absolute;width:100%}.touch{position:absolute;height:max(48px,100%);width:max(48px,100%)}:host([touch-target=none]) .touch{display:none}@media(forced-colors: active){:host([disabled]){--_disabled-icon-opacity: 1}}/*# sourceMappingURL=shared-styles.css.map */\n`;\n//# sourceMappingURL=shared-styles.css.js.map"],"names":["isRtl","el","shouldCheck","_a","IconButton","LitElement","name","internals","tag","literal","ariaLabel","ariaHasPopup","ariaExpanded","hasToggledAriaLabel","ariaPressedValue","nothing","ariaLabelValue","staticHtml","classMap","html","event","requestUpdateOnAriaChange","setupFormSubmitter","__decorate","property","state","styles","css"],"mappings":"wQAAA;AAAA;AAAA;AAAA;AAAA,GAaO,SAASA,EAAMC,EAAIC,EAAc,GAAM,CAC1C,OAAOA,GACH,iBAAiBD,CAAE,EAAE,iBAAiB,WAAW,EAAE,KAAM,IAAK,KACtE,CChBA;AAAA;AAAA;AAAA;AAAA,GAKA,IAAIE,EAaG,MAAMC,UAAmBC,CAAW,CACvC,aAAc,CACV,MAAM,GAAG,SAAS,EAIlB,KAAK,SAAW,GAIhB,KAAK,cAAgB,GAIrB,KAAK,KAAO,GAIZ,KAAK,OAAS,GAId,KAAK,kBAAoB,GAKzB,KAAK,OAAS,GAMd,KAAK,SAAW,GAChB,KAAK,KAAO,SACZ,KAAK,MAAQ,GACb,KAAK,SAAWL,EAAM,KAAM,KAAK,aAAa,EAE9C,KAAKG,CAAE,EAAI,KAA8B,gBAAe,CAC3D,CACD,IAAI,MAAO,CACP,OAAO,KAAK,aAAa,MAAM,GAAK,EACvC,CACD,IAAI,KAAKG,EAAM,CACX,KAAK,aAAa,OAAQA,CAAI,CACjC,CAID,IAAI,MAAO,CACP,OAAO,KAAKC,CAAS,EAAE,IAC1B,CAID,IAAI,QAAS,CACT,OAAO,KAAKA,CAAS,EAAE,MAC1B,CAID,YAAa,CACL,KAAK,OACL,KAAK,SAAW,GAEvB,CACD,QAAS,CACL,MAAMC,EAAM,KAAK,KAAOC,OAAgBA,UAElC,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAY,EAAK,KAC5CC,EAAsBH,GAAa,KAAK,kBACxCI,EAAoB,KAAK,OAAmB,KAAK,SAAfC,EACxC,IAAIC,EAAiBD,EACrB,OAAK,KAAK,OACNC,EAAkBH,GAAuB,KAAK,SAC1C,KAAK,kBACLH,GAEDO,KAAeT,CAAG;AAAA,6BACJU,EAAS,KAAK,iBAAgB,CAAE,CAAC;AAAA;AAAA,sBAExCF,GAAkBD,CAAO;AAAA,yBACtB,CAAC,KAAK,MAAQJ,GAAgBI,CAAO;AAAA,yBACrC,CAAC,KAAK,MAAQH,GAAgBG,CAAO;AAAA,wBACtCD,CAAgB;AAAA,qBACnB,CAAC,KAAK,MAAQ,KAAK,QAAQ;AAAA,kBAC9B,KAAK,WAAW;AAAA,UACxB,KAAK,iBAAiB;AAAA,UACtB,KAAK,cAAc;AAAA,UAClB,KAAK,SAA+BC,EAApB,KAAK,WAAU,CAAY;AAAA,UAC5C,KAAK,SAAW,KAAK,mBAAkB,EAAKA,CAAO;AAAA,UACnD,KAAK,mBAAmB;AAAA,UACxB,KAAK,MAAQ,KAAK,WAAU,CAAE;AAAA,MAClCP,CAAG,GACJ,CACD,YAAa,CAET,KAAM,CAAE,UAAAE,CAAW,EAAG,KACtB,OAAOS;AAAAA;AAAAA;AAAAA,gBAGC,KAAK,IAAI;AAAA,kBACP,KAAK,QAAUJ,CAAO;AAAA,sBAClBL,GAAaK,CAAO;AAAA;AAAA,KAGrC,CACD,kBAAmB,CACf,MAAO,CACH,YAAa,KAAK,SAClB,SAAY,KAAK,QAAU,KAAK,QAC5C,CACK,CACD,YAAa,CACT,OAAOI,0CACV,CACD,oBAAqB,CAEjB,OAAOA,sFACV,CACD,mBAAoB,CAChB,OAAOA,8BACV,CACD,iBAAkB,CACd,OAAOA,yCAA6C,KAAK,KAAO,OAAS,QAAQ,mBACpF,CACD,cAAe,CACX,OAAOA;AAAAA,YACH,KAAK,KAAO,OAASJ,CAAO;AAAA,mBACrB,CAAC,KAAK,MAAQ,KAAK,QAAQ;AAAA,kBAEzC,CACD,mBAAoB,CAChB,KAAK,SAAWf,EAAM,KAAM,KAAK,aAAa,EAC9C,MAAM,kBAAiB,CAC1B,CACD,MAAM,YAAYoB,EAAO,CAErB,KAAM,GACF,GAAC,KAAK,QAAU,KAAK,UAAYA,EAAM,oBAG3C,KAAK,SAAW,CAAC,KAAK,SACtB,KAAK,cAAc,IAAI,WAAW,QAAS,CAAE,QAAS,GAAM,SAAU,EAAM,CAAA,CAAC,EAG7E,KAAK,cAAc,IAAI,MAAM,SAAU,CAAE,QAAS,EAAM,CAAA,CAAC,EAC5D,CACL,CACAjB,EAAKI,EAEDc,EAA0BjB,CAAU,EACpCkB,EAAmBlB,CAAU,EAGjCA,EAAW,eAAiB,GAE5BA,EAAW,kBAAoB,CAAE,KAAM,OAAQ,eAAgB,EAAI,EACnEmB,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,QAAS,EAAI,CAAE,CAC7C,EAAGpB,EAAW,UAAW,WAAY,MAAM,EAC3CmB,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,UAAW,kBAAkB,CAAE,CAC7D,EAAGpB,EAAW,UAAW,gBAAiB,MAAM,EAChDmB,EAAW,CACPC,EAAU,CACd,EAAGpB,EAAW,UAAW,OAAQ,MAAM,EACvCmB,EAAW,CACPC,EAAU,CACd,EAAGpB,EAAW,UAAW,SAAU,MAAM,EACzCmB,EAAW,CACPC,EAAS,CAAE,UAAW,sBAAuB,CACjD,EAAGpB,EAAW,UAAW,oBAAqB,MAAM,EACpDmB,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,CAC9B,EAAGpB,EAAW,UAAW,SAAU,MAAM,EACzCmB,EAAW,CACPC,EAAS,CAAE,KAAM,QAAS,QAAS,EAAI,CAAE,CAC7C,EAAGpB,EAAW,UAAW,WAAY,MAAM,EAC3CmB,EAAW,CACPC,EAAU,CACd,EAAGpB,EAAW,UAAW,OAAQ,MAAM,EACvCmB,EAAW,CACPC,EAAU,CACd,EAAGpB,EAAW,UAAW,QAAS,MAAM,EACxCmB,EAAW,CACPE,EAAO,CACX,EAAGrB,EAAW,UAAW,WAAY,MAAM,EC7M3C;AAAA;AAAA;AAAA;AAAA,IAMY,MAACsB,EAASC;","x_google_ignoreList":[0,1,2]}