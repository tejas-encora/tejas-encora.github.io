{"version":3,"file":"checkbox.stories-f19c2fd4.js","sources":["../../node_modules/@material/web/checkbox/internal/checkbox.js","../../node_modules/@material/web/checkbox/internal/checkbox-styles.css.js","../../node_modules/@material/web/checkbox/checkbox.js","../../src/components/Checkbox/IOCheckbox.vue"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { requestUpdateOnAriaChange } from '../../internal/aria/delegate.js';\nimport { dispatchActivationClick, isActivationClick, redispatchEvent } from '../../internal/controller/events.js';\n/**\n * A checkbox component.\n */\nexport class Checkbox extends LitElement {\n    /**\n     * The HTML name to use in form submission.\n     */\n    get name() {\n        return this.getAttribute('name') ?? '';\n    }\n    set name(name) {\n        this.setAttribute('name', name);\n    }\n    /**\n     * The associated form element with which this element's value will submit.\n     */\n    get form() {\n        return this.internals.form;\n    }\n    /**\n     * The labels this element is associated with.\n     */\n    get labels() {\n        return this.internals.labels;\n    }\n    /**\n     * Returns a ValidityState object that represents the validity states of the\n     * checkbox.\n     *\n     * Note that checkboxes will only set `valueMissing` if `required` and not\n     * checked.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n     */\n    get validity() {\n        this.syncValidity();\n        return this.internals.validity;\n    }\n    /**\n     * Returns the native validation error message.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n     */\n    get validationMessage() {\n        this.syncValidity();\n        return this.internals.validationMessage;\n    }\n    /**\n     * Returns whether an element will successfully validate based on forms\n     * validation rules and constraints.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation#constraint_validation_process\n     */\n    get willValidate() {\n        this.syncValidity();\n        return this.internals.willValidate;\n    }\n    constructor() {\n        super();\n        /**\n         * Whether or not the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * Whether or not the checkbox is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether or not the checkbox is indeterminate.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n         */\n        this.indeterminate = false;\n        /**\n         * When true, require the checkbox to be selected when participating in\n         * form submission.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n         */\n        this.required = false;\n        /**\n         * The value of the checkbox that is submitted with a form when selected.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n         */\n        this.value = 'on';\n        this.prevChecked = false;\n        this.prevDisabled = false;\n        this.prevIndeterminate = false;\n        // Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n        // Replace with this.internals.validity.customError when resolved.\n        this.hasCustomValidityError = false;\n        this.internals = this /* needed for closure */.attachInternals();\n        if (!isServer) {\n            this.addEventListener('click', (event) => {\n                if (!isActivationClick(event)) {\n                    return;\n                }\n                this.focus();\n                dispatchActivationClick(this.input);\n            });\n        }\n    }\n    /**\n     * Checks the checkbox's native validation and returns whether or not the\n     * element is valid.\n     *\n     * If invalid, this method will dispatch the `invalid` event.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/checkValidity\n     *\n     * @return true if the checkbox is valid, or false if not.\n     */\n    checkValidity() {\n        this.syncValidity();\n        return this.internals.checkValidity();\n    }\n    /**\n     * Checks the checkbox's native validation and returns whether or not the\n     * element is valid.\n     *\n     * If invalid, this method will dispatch the `invalid` event.\n     *\n     * The `validationMessage` is reported to the user by the browser. Use\n     * `setCustomValidity()` to customize the `validationMessage`.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/reportValidity\n     *\n     * @return true if the checkbox is valid, or false if not.\n     */\n    reportValidity() {\n        this.syncValidity();\n        return this.internals.reportValidity();\n    }\n    /**\n     * Sets the checkbox's native validation error message. This is used to\n     * customize `validationMessage`.\n     *\n     * When the error is not an empty string, the checkbox is considered invalid\n     * and `validity.customError` will be true.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setCustomValidity\n     *\n     * @param error The error message to display.\n     */\n    setCustomValidity(error) {\n        this.hasCustomValidityError = !!error;\n        this.internals.setValidity({ customError: !!error }, error, this.getInput());\n    }\n    update(changed) {\n        if (changed.has('checked') || changed.has('disabled') ||\n            changed.has('indeterminate')) {\n            this.prevChecked = changed.get('checked') ?? this.checked;\n            this.prevDisabled = changed.get('disabled') ?? this.disabled;\n            this.prevIndeterminate =\n                changed.get('indeterminate') ?? this.indeterminate;\n        }\n        const shouldAddFormValue = this.checked && !this.indeterminate;\n        const state = String(this.checked);\n        this.internals.setFormValue(shouldAddFormValue ? this.value : null, state);\n        super.update(changed);\n    }\n    render() {\n        const prevNone = !this.prevChecked && !this.prevIndeterminate;\n        const prevChecked = this.prevChecked && !this.prevIndeterminate;\n        const prevIndeterminate = this.prevIndeterminate;\n        const isChecked = this.checked && !this.indeterminate;\n        const isIndeterminate = this.indeterminate;\n        const containerClasses = classMap({\n            'disabled': this.disabled,\n            'selected': isChecked || isIndeterminate,\n            'unselected': !isChecked && !isIndeterminate,\n            'checked': isChecked,\n            'indeterminate': isIndeterminate,\n            'prev-unselected': prevNone,\n            'prev-checked': prevChecked,\n            'prev-indeterminate': prevIndeterminate,\n            'prev-disabled': this.prevDisabled,\n        });\n        // Needed for closure conformance\n        const { ariaLabel, ariaInvalid } = this;\n        // Note: <input> needs to be rendered before the <svg> for\n        // form.reportValidity() to work in Chrome.\n        return html `\n      <div class=\"container ${containerClasses}\">\n        <input type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @change=${this.handleChange}\n        >\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n    }\n    updated() {\n        // Sync validity when properties change, since validation properties may\n        // have changed.\n        this.syncValidity();\n    }\n    handleChange(event) {\n        const target = event.target;\n        this.checked = target.checked;\n        this.indeterminate = target.indeterminate;\n        redispatchEvent(this, event);\n    }\n    syncValidity() {\n        // Sync the internal <input>'s validity and the host's ElementInternals\n        // validity. We do this to re-use native `<input>` validation messages.\n        const input = this.getInput();\n        if (this.hasCustomValidityError) {\n            input.setCustomValidity(this.internals.validationMessage);\n        }\n        else {\n            input.setCustomValidity('');\n        }\n        this.internals.setValidity(input.validity, input.validationMessage, this.getInput());\n    }\n    getInput() {\n        if (!this.input) {\n            // If the input is not yet defined, synchronously render.\n            this.connectedCallback();\n            this.performUpdate();\n        }\n        if (this.isUpdatePending) {\n            // If there are pending updates, synchronously perform them. This ensures\n            // that constraint validation properties (like `required`) are synced\n            // before interacting with input APIs that depend on them.\n            this.scheduleUpdate();\n        }\n        return this.input;\n    }\n    /** @private */\n    formResetCallback() {\n        // The checked property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.checked = this.hasAttribute('checked');\n    }\n    /** @private */\n    formStateRestoreCallback(state) {\n        this.checked = state === 'true';\n    }\n}\n(() => {\n    requestUpdateOnAriaChange(Checkbox);\n})();\n/** @nocollapse */\nCheckbox.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true\n};\n/** @nocollapse */\nCheckbox.formAssociated = true;\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"checked\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Checkbox.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"indeterminate\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Checkbox.prototype, \"value\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevChecked\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevDisabled\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevIndeterminate\", void 0);\n__decorate([\n    query('input')\n], Checkbox.prototype, \"input\", void 0);\n//# sourceMappingURL=checkbox.js.map","/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\nimport { css } from 'lit';\nexport const styles = css `:host{--_container-shape: var(--md-checkbox-container-shape, 2px);--_container-size: var(--md-checkbox-container-size, 18px);--_icon-size: var(--md-checkbox-icon-size, 18px);--_selected-container-color: var(--md-checkbox-selected-container-color, var(--md-sys-color-primary, #6750a4));--_selected-disabled-container-color: var(--md-checkbox-selected-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_selected-disabled-container-opacity: var(--md-checkbox-selected-disabled-container-opacity, 0.38);--_selected-disabled-icon-color: var(--md-checkbox-selected-disabled-icon-color, var(--md-sys-color-surface, #fef7ff));--_selected-focus-container-color: var(--md-checkbox-selected-focus-container-color, var(--md-sys-color-primary, #6750a4));--_selected-focus-icon-color: var(--md-checkbox-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-hover-container-color: var(--md-checkbox-selected-hover-container-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-icon-color: var(--md-checkbox-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-hover-state-layer-color: var(--md-checkbox-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--_selected-hover-state-layer-opacity: var(--md-checkbox-selected-hover-state-layer-opacity, 0.08);--_selected-icon-color: var(--md-checkbox-selected-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-pressed-container-color: var(--md-checkbox-selected-pressed-container-color, var(--md-sys-color-primary, #6750a4));--_selected-pressed-icon-color: var(--md-checkbox-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_selected-pressed-state-layer-color: var(--md-checkbox-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_selected-pressed-state-layer-opacity: var(--md-checkbox-selected-pressed-state-layer-opacity, 0.12);--_state-layer-shape: var(--md-checkbox-state-layer-shape, 9999px);--_state-layer-size: var(--md-checkbox-state-layer-size, 40px);--_disabled-container-opacity: var(--md-checkbox-disabled-container-opacity, 0.38);--_disabled-outline-color: var(--md-checkbox-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-width: var(--md-checkbox-disabled-outline-width, 2px);--_focus-outline-color: var(--md-checkbox-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-outline-width: var(--md-checkbox-focus-outline-width, 2px);--_hover-outline-color: var(--md-checkbox-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-checkbox-hover-outline-width, 2px);--_hover-state-layer-color: var(--md-checkbox-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-checkbox-hover-state-layer-opacity, 0.08);--_outline-color: var(--md-checkbox-outline-color, var(--md-sys-color-on-surface-variant, #49454f));--_outline-width: var(--md-checkbox-outline-width, 2px);--_pressed-outline-color: var(--md-checkbox-pressed-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-outline-width: var(--md-checkbox-pressed-outline-width, 2px);--_pressed-state-layer-color: var(--md-checkbox-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--_pressed-state-layer-opacity: var(--md-checkbox-pressed-state-layer-opacity, 0.12);--_container-shape-start-start: var( --md-checkbox-container-shape-start-start, var(--_container-shape) );--_container-shape-start-end: var( --md-checkbox-container-shape-start-end, var(--_container-shape) );--_container-shape-end-end: var( --md-checkbox-container-shape-end-end, var(--_container-shape) );--_container-shape-end-start: var( --md-checkbox-container-shape-end-start, var(--_container-shape) );border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:inline-flex;height:var(--_container-size);position:relative;vertical-align:top;width:var(--_container-size);-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-size))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.outline,.background,.icon{inset:0;position:absolute}.outline,.background{border-radius:inherit}.outline{border-color:var(--_outline-color);border-style:solid;border-width:var(--_outline-width);box-sizing:border-box}.background{background-color:var(--_selected-container-color)}.background,.icon{opacity:0;transition-duration:150ms,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15),linear;transform:scale(0.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:350ms,50ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1),linear;transform:scale(1)}md-ripple{border-radius:var(--_state-layer-shape);height:var(--_state-layer-size);inset:unset;width:var(--_state-layer-size);--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}.selected md-ripple{--md-ripple-hover-color: var(--_selected-hover-state-layer-color);--md-ripple-hover-opacity: var(--_selected-hover-state-layer-opacity);--md-ripple-pressed-color: var(--_selected-pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_selected-pressed-state-layer-opacity)}.icon{fill:var(--_selected-icon-color);height:var(--_icon-size);width:var(--_icon-size)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:150ms;animation-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15);transition-duration:150ms;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15)}.selected .mark{animation-duration:350ms;animation-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1);transition-duration:350ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px, -14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px, -10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{from{width:0}}:where(:hover) .outline{border-color:var(--_hover-outline-color);border-width:var(--_hover-outline-width)}:where(:hover) .background{background:var(--_selected-hover-container-color)}:where(:hover) .icon{fill:var(--_selected-hover-icon-color)}:where(:focus-within) .outline{border-color:var(--_focus-outline-color);border-width:var(--_focus-outline-width)}:where(:focus-within) .background{background:var(--_selected-focus-container-color)}:where(:focus-within) .icon{fill:var(--_selected-focus-icon-color)}:where(:active) .outline{border-color:var(--_pressed-outline-color);border-width:var(--_pressed-outline-width)}:where(:active) .background{background:var(--_selected-pressed-container-color)}:where(:active) .icon{fill:var(--_selected-pressed-icon-color)}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--_disabled-outline-color);border-width:var(--_disabled-outline-width);opacity:var(--_disabled-container-opacity)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--_selected-disabled-container-color);opacity:var(--_selected-disabled-container-opacity)}:where(.disabled) .icon{fill:var(--_selected-disabled-icon-color)}@media(forced-colors: active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}/*# sourceMappingURL=checkbox-styles.css.map */\n`;\n//# sourceMappingURL=checkbox-styles.css.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Checkbox } from './internal/checkbox.js';\nimport { styles } from './internal/checkbox-styles.css.js';\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\nexport let MdCheckbox = class MdCheckbox extends Checkbox {\n};\nMdCheckbox.styles = [styles];\nMdCheckbox = __decorate([\n    customElement('md-checkbox')\n], MdCheckbox);\n//# sourceMappingURL=checkbox.js.map","<template>\n  <md-checkbox touch-target=\"wrapper\" :error=\"isError\" :value=\"modelValue\" @input=\"$emit('update:modelValue', $event.target.value)\"\n     ></md-checkbox>\n</template>\n\n<script>\nexport default {\n  name: 'IOCheckbox',\n  props: {\n    error: {\n      type: Boolean,\n      default: false,\n    },\n  },  \n  computed: {\n    isError() {\n      return this.error;\n    },\n  },\n  emits: ['update:modelValue'],\n};\n</script>\n<style scoped>\nmd-checkbox[error] {\n    --md-sys-color-primary: var(--md-ref-palette-error40);\n}\n\n</style>"],"names":["LitElement","name","event","isActivationClick","dispatchActivationClick","error","changed","shouldAddFormValue","state","prevNone","prevChecked","prevIndeterminate","isChecked","isIndeterminate","containerClasses","classMap","ariaLabel","ariaInvalid","html","nothing","target","redispatchEvent","input","requestUpdateOnAriaChange","Checkbox","__decorate","property","query","styles","css","MdCheckbox","customElement","_sfc_main","_createBlock","_component_md_checkbox","$options","_ctx","$event"],"mappings":"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","x_google_ignoreList":[0,1,2]}