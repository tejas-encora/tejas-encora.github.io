{"version":3,"mappings":"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","names":["_sfc_main","paletteKey","filtered","key","value","cssText","__vitePreload","regex","matches","variables","match","property","_hoisted_1","_withScopeId","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","_hoisted_22","_createElementBlock","_hoisted_5","_openBlock","_Fragment","_renderList","$options","_toDisplayString","_hoisted_10","_hoisted_15","_hoisted_20"],"sources":["../../src/stories/ColorGrid.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Tonal Palette</h1>\n        <div class=\"color-grid\">\n            <!-- Primary Grid -->\n            <h3>Primary</h3>\n            <div class=\"color-grid\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Swatch</th>\n                            <th>Hex</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(value, key) in primaryPalette\" :key=\"key\">\n                            <td class=\"color-name\">{{ key }}</td>\n                            <td class=\"color-sample\" :style=\"{ backgroundColor: value }\"></td>\n                            <td class=\"color-value\">{{ value }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <!-- Secondary Grid -->\n            <h3>Secondary Palette</h3>\n            <div class=\"color-grid\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Swatch</th>\n                            <th>Hex</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(value, key) in secondaryPalette\" :key=\"key\">\n                            <td class=\"color-name\">{{ key }}</td>\n                            <td class=\"color-sample\" :style=\"{ backgroundColor: value }\"></td>\n                            <td class=\"color-value\">{{ value }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <!-- Neutral Grid -->\n            <h3>Neutral Palette</h3>\n            <div class=\"color-grid\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Swatch</th>\n                            <th>Hex</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(value, key) in neutralPalette\" :key=\"key\">\n                            <td class=\"color-name\">{{ key }}</td>\n                            <td class=\"color-sample\" :style=\"{ backgroundColor: value }\"></td>\n                            <td class=\"color-value\">{{ value }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <!-- Neutral Variant Grid -->\n            <h3>Neutral Variant Palette</h3>\n            <div class=\"color-grid\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Swatch</th>\n                            <th>Hex</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(value, key) in neutralPalette\" :key=\"key\">\n                            <td class=\"color-name\">{{ key }}</td>\n                            <td class=\"color-sample\" :style=\"{ backgroundColor: value }\"></td>\n                            <td class=\"color-value\">{{ value }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            colorVariables: {},\n        };\n    },\n    computed: {\n        primaryPalette() {\n            return this.getFilteredPalette('palette-primary');\n        },\n        secondaryPalette() {\n            return this.getFilteredPalette('palette-secondary');\n        },\n        neutralPalette() {\n            return this.getFilteredPalette('palette-neutral');\n        },\n        neutralVariantPalette() {\n            return this.getFilteredPalette('palette-neutral-variant');\n        },\n    },\n    methods: {\n        getFilteredPalette(paletteKey) {\n            // Filter variables based on paletteKey\n            return Object.entries(this.colorVariables).reduce((filtered, [key, value]) => {\n                if (key.includes(paletteKey)) {\n                    filtered[key] = value;\n                }\n                return filtered;\n            }, {});\n        },\n    },\n    async created() {\n        // Import the CSS variables from tokens.css\n        const { default: cssText } = await import('@/assets/tokens.css');\n        const regex = /--[\\w-]+:[^;]+/g;\n        const matches = cssText.match(regex);\n\n        if (matches) {\n            const variables = {};\n            matches.forEach((match) => {\n                const [property, value] = match.split(':');\n                variables[property.trim()] = value.trim();\n            });\n            this.colorVariables = variables;\n        }\n    },\n};\n</script>\n\n<style scoped>\n.color-grid {\n    overflow-x: auto;\n}\nh1, h2,h3 {\n    font-family: 'Lato', sans-serif;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n    font-family: 'Lato', sans-serif;\n}\n\nth,\ntd {\n    padding: 8px;\n    text-align: left;\n}\n\nth {\n    font-weight: bold;\n    text-align: left;\n    border-bottom: 1px solid #ddd;\n    padding-bottom: 10px;\n}\n\n.color-name {\n    white-space: nowrap;\n    width: 30%;\n}\n\n.color-sample {\n    width: 24px;\n    height: 24px;\n    border: 1px solid #ccc;\n}\n\n.color-value {\n    color: #777;\n}\n\nh1 {\n    font-family: 'Lato', sans-serif;\n}\n</style>\n"],"file":"assets/color-grid.stories-a9454427.js"}