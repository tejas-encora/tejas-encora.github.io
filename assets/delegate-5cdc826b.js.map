{"version":3,"file":"delegate-5cdc826b.js","sources":["../../node_modules/@material/web/internal/aria/delegate.js"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ARIA_PROPERTIES, ariaPropertyToAttribute } from './aria.js';\n/**\n * Sets up a `ReactiveElement` constructor to enable updates when delegating\n * aria attributes. Elements may bind `this.aria*` properties to `aria-*`\n * attributes in their render functions.\n *\n * This function will:\n * - Call `requestUpdate()` when an aria attribute changes.\n * - Add `role=\"presentation\"` to the host.\n *\n * NOTE: The following features are not currently supported:\n * - Delegating IDREF attributes (ex: `aria-labelledby`, `aria-controls`)\n * - Delegating the `role` attribute\n *\n * @example\n * class XButton extends LitElement {\n *   static {\n *     requestUpdateOnAriaChange(XButton);\n *   }\n *\n *   protected override render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nexport function requestUpdateOnAriaChange(ctor) {\n    for (const ariaProperty of ARIA_PROPERTIES) {\n        ctor.createProperty(ariaProperty, {\n            attribute: ariaPropertyToAttribute(ariaProperty),\n            reflect: true,\n        });\n    }\n    ctor.addInitializer(element => {\n        const controller = {\n            hostConnected() {\n                element.setAttribute('role', 'presentation');\n            }\n        };\n        element.addController(controller);\n    });\n}\n//# sourceMappingURL=delegate.js.map"],"names":["requestUpdateOnAriaChange","ctor","ariaProperty","ARIA_PROPERTIES","ariaPropertyToAttribute","element","controller"],"mappings":"yCAAA;AAAA;AAAA;AAAA;AAAA,GAoCO,SAASA,EAA0BC,EAAM,CAC5C,UAAWC,KAAgBC,EACvBF,EAAK,eAAeC,EAAc,CAC9B,UAAWE,EAAwBF,CAAY,EAC/C,QAAS,EACrB,CAAS,EAELD,EAAK,eAAeI,GAAW,CAC3B,MAAMC,EAAa,CACf,eAAgB,CACZD,EAAQ,aAAa,OAAQ,cAAc,CAC9C,CACb,EACQA,EAAQ,cAAcC,CAAU,CACxC,CAAK,CACL","x_google_ignoreList":[0]}